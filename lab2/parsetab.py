
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocIFXnonassocELSErightMULASSIGNDIVASSIGNSUBASSIGNADDASSIGNnonassocLTGTGELEEQNEleft+-leftDOTADDDOTSUBleft*/leftDOTMULDOTDIVrightUMINUSleft\'ADDASSIGN BREAK CONTINUE DIVASSIGN DOTADD DOTDIV DOTMUL DOTSUB ELSE EQ EYE FLOATNUM FOR GE GT ID IF INTNUM LE LT MULASSIGN NE ONES PRINT RETURN STRING SUBASSIGN WHILE ZEROSinstructions_opt : instructions instructions_opt : instructions : instructions instruction instructions : instruction instruction : sys_instruction \';\'\n                   | assignment \';\'\n                   | \'{\' instructions \'}\' sys_instruction : RETURN expression sys_instruction : BREAK sys_instruction : CONTINUEsys_instruction : PRINT print_values instruction : IF \'(\' condition \')\' instruction %prec IFX instruction : IF \'(\' condition \')\' instruction ELSE instruction instruction : FOR var \'=\' expression \':\' expression instruction instruction : WHILE \'(\' condition \')\' instruction assignment : var assignment_operator expression\n                  | matrix_element assignment_operator expression\n                  | vector_element assignment_operator expression assignment_operator : \'=\'\n                           | ADDASSIGN\n                           | SUBASSIGN\n                           | MULASSIGN\n                           | DIVASSIGN matrix : \'[\' vectors \']\' vector : \'[\' variables \']\' vectors : vectors \',\' vector\n                | vector matrix_function : function_name \'(\' INTNUM \')\' function_name : EYE\n                     | ONES\n                     | ZEROS var : ID number : INTNUM\n              | FLOATNUM string : STRING variable : number\n                 | var\n                 | element  vector_element : ID "[" INTNUM "]"  matrix_element : ID "[" INTNUM "," INTNUM "]"  element : vector_element\n               | matrix_elementvariables : variables \',\' variable\n                 | variable expression : number\n                  | var\n                  | matrix\n                  | matrix_function\n                  | uminus\n                  | transposition\n                  | matrix_element\n                  | vector_element expression : expression \'+\' expression\n                  | expression \'-\' expression\n                  | expression \'*\' expression\n                  | expression \'/\' expression\n                  | expression DOTADD expression\n                  | expression DOTSUB expression\n                  | expression DOTMUL expression\n                  | expression DOTDIV expression condition : expression EQ expression\n                 | expression NE expression\n                 | expression LE expression\n                 | expression GE expression\n                 | expression LT expression\n                 | expression GT expression uminus : \'-\' expression %prec UMINUS transposition : expression "\'" print_values : print_values \',\' string\n                    | print_values \',\' expression\n                    | string\n                    | expression '
    
_lr_action_items = {'$end':([0,1,2,3,18,19,20,56,112,120,132,133,],[-2,0,-1,-4,-3,-5,-6,-7,-12,-15,-13,-14,]),'{':([0,2,3,6,17,18,19,20,21,33,34,35,36,37,38,39,40,42,43,56,70,71,80,88,89,90,91,92,93,94,95,96,105,111,112,120,125,127,128,131,132,133,],[6,6,-4,6,-32,-3,-5,-6,6,-45,-46,-47,-48,-49,-50,-51,-52,-33,-34,-7,-68,-67,6,6,-53,-54,-55,-56,-57,-58,-59,-60,-24,-39,-12,-15,-28,6,6,-40,-13,-14,]),'IF':([0,2,3,6,17,18,19,20,21,33,34,35,36,37,38,39,40,42,43,56,70,71,80,88,89,90,91,92,93,94,95,96,105,111,112,120,125,127,128,131,132,133,],[7,7,-4,7,-32,-3,-5,-6,7,-45,-46,-47,-48,-49,-50,-51,-52,-33,-34,-7,-68,-67,7,7,-53,-54,-55,-56,-57,-58,-59,-60,-24,-39,-12,-15,-28,7,7,-40,-13,-14,]),'FOR':([0,2,3,6,17,18,19,20,21,33,34,35,36,37,38,39,40,42,43,56,70,71,80,88,89,90,91,92,93,94,95,96,105,111,112,120,125,127,128,131,132,133,],[8,8,-4,8,-32,-3,-5,-6,8,-45,-46,-47,-48,-49,-50,-51,-52,-33,-34,-7,-68,-67,8,8,-53,-54,-55,-56,-57,-58,-59,-60,-24,-39,-12,-15,-28,8,8,-40,-13,-14,]),'WHILE':([0,2,3,6,17,18,19,20,21,33,34,35,36,37,38,39,40,42,43,56,70,71,80,88,89,90,91,92,93,94,95,96,105,111,112,120,125,127,128,131,132,133,],[10,10,-4,10,-32,-3,-5,-6,10,-45,-46,-47,-48,-49,-50,-51,-52,-33,-34,-7,-68,-67,10,10,-53,-54,-55,-56,-57,-58,-59,-60,-24,-39,-12,-15,-28,10,10,-40,-13,-14,]),'RETURN':([0,2,3,6,17,18,19,20,21,33,34,35,36,37,38,39,40,42,43,56,70,71,80,88,89,90,91,92,93,94,95,96,105,111,112,120,125,127,128,131,132,133,],[11,11,-4,11,-32,-3,-5,-6,11,-45,-46,-47,-48,-49,-50,-51,-52,-33,-34,-7,-68,-67,11,11,-53,-54,-55,-56,-57,-58,-59,-60,-24,-39,-12,-15,-28,11,11,-40,-13,-14,]),'BREAK':([0,2,3,6,17,18,19,20,21,33,34,35,36,37,38,39,40,42,43,56,70,71,80,88,89,90,91,92,93,94,95,96,105,111,112,120,125,127,128,131,132,133,],[12,12,-4,12,-32,-3,-5,-6,12,-45,-46,-47,-48,-49,-50,-51,-52,-33,-34,-7,-68,-67,12,12,-53,-54,-55,-56,-57,-58,-59,-60,-24,-39,-12,-15,-28,12,12,-40,-13,-14,]),'CONTINUE':([0,2,3,6,17,18,19,20,21,33,34,35,36,37,38,39,40,42,43,56,70,71,80,88,89,90,91,92,93,94,95,96,105,111,112,120,125,127,128,131,132,133,],[13,13,-4,13,-32,-3,-5,-6,13,-45,-46,-47,-48,-49,-50,-51,-52,-33,-34,-7,-68,-67,13,13,-53,-54,-55,-56,-57,-58,-59,-60,-24,-39,-12,-15,-28,13,13,-40,-13,-14,]),'PRINT':([0,2,3,6,17,18,19,20,21,33,34,35,36,37,38,39,40,42,43,56,70,71,80,88,89,90,91,92,93,94,95,96,105,111,112,120,125,127,128,131,132,133,],[14,14,-4,14,-32,-3,-5,-6,14,-45,-46,-47,-48,-49,-50,-51,-52,-33,-34,-7,-68,-67,14,14,-53,-54,-55,-56,-57,-58,-59,-60,-24,-39,-12,-15,-28,14,14,-40,-13,-14,]),'ID':([0,2,3,6,8,11,14,17,18,19,20,21,22,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,53,54,56,59,62,63,64,65,66,67,68,69,70,71,72,76,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,105,111,112,119,120,122,125,127,128,131,132,133,],[17,17,-4,17,24,17,17,-32,-3,-5,-6,17,17,17,-19,-20,-21,-22,-23,17,-45,-46,-47,-48,-49,-50,-51,-52,17,-33,-34,17,17,-7,17,17,17,17,17,17,17,17,17,-68,-67,102,17,17,17,17,17,17,17,17,17,-53,-54,-55,-56,-57,-58,-59,-60,-24,-39,-12,17,-15,102,-28,17,17,-40,-13,-14,]),'}':([3,18,19,20,21,56,112,120,132,133,],[-4,-3,-5,-6,56,-7,-12,-15,-13,-14,]),';':([4,5,12,13,17,32,33,34,35,36,37,38,39,40,42,43,49,50,51,52,60,70,71,77,78,89,90,91,92,93,94,95,96,105,108,109,111,125,131,],[19,20,-9,-10,-32,-8,-45,-46,-47,-48,-49,-50,-51,-52,-33,-34,-11,-71,-72,-35,-16,-68,-67,-17,-18,-53,-54,-55,-56,-57,-58,-59,-60,-24,-69,-70,-39,-28,-40,]),'(':([7,10,45,46,47,48,],[22,31,75,-29,-30,-31,]),'=':([9,15,16,17,23,24,111,131,],[26,26,26,-32,59,-32,-39,-40,]),'ADDASSIGN':([9,15,16,17,111,131,],[27,27,27,-32,-39,-40,]),'SUBASSIGN':([9,15,16,17,111,131,],[28,28,28,-32,-39,-40,]),'MULASSIGN':([9,15,16,17,111,131,],[29,29,29,-32,-39,-40,]),'DIVASSIGN':([9,15,16,17,111,131,],[30,30,30,-32,-39,-40,]),'INTNUM':([11,14,22,25,26,27,28,29,30,31,41,53,54,55,59,62,63,64,65,66,67,68,69,72,75,76,81,82,83,84,85,86,110,119,122,123,],[42,42,42,42,-19,-20,-21,-22,-23,42,42,42,42,79,42,42,42,42,42,42,42,42,42,42,107,42,42,42,42,42,42,42,126,42,42,130,]),'FLOATNUM':([11,14,22,25,26,27,28,29,30,31,41,53,54,59,62,63,64,65,66,67,68,69,72,76,81,82,83,84,85,86,119,122,],[43,43,43,43,-19,-20,-21,-22,-23,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'[':([11,14,17,22,25,26,27,28,29,30,31,41,44,53,54,59,62,63,64,65,66,67,68,69,76,81,82,83,84,85,86,102,106,119,],[44,44,55,44,44,-19,-20,-21,-22,-23,44,44,72,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,123,72,44,]),'-':([11,14,17,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,51,53,54,58,59,60,62,63,64,65,66,67,68,69,70,71,76,77,78,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,105,109,111,113,114,115,116,117,118,119,125,128,131,],[41,41,-32,41,41,-19,-20,-21,-22,-23,41,63,-45,-46,-47,-48,-49,-50,-51,-52,41,-33,-34,63,41,41,63,41,63,41,41,41,41,41,41,41,41,-68,-67,41,63,63,41,41,41,41,41,41,63,-53,-54,-55,-56,-57,-58,-59,-60,-24,63,-39,63,63,63,63,63,63,41,-28,63,-40,]),'EYE':([11,14,22,25,26,27,28,29,30,31,41,53,54,59,62,63,64,65,66,67,68,69,76,81,82,83,84,85,86,119,],[46,46,46,46,-19,-20,-21,-22,-23,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'ONES':([11,14,22,25,26,27,28,29,30,31,41,53,54,59,62,63,64,65,66,67,68,69,76,81,82,83,84,85,86,119,],[47,47,47,47,-19,-20,-21,-22,-23,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'ZEROS':([11,14,22,25,26,27,28,29,30,31,41,53,54,59,62,63,64,65,66,67,68,69,76,81,82,83,84,85,86,119,],[48,48,48,48,-19,-20,-21,-22,-23,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'STRING':([14,76,],[52,52,]),'+':([17,32,33,34,35,36,37,38,39,40,42,43,51,58,60,70,71,77,78,87,89,90,91,92,93,94,95,96,105,109,111,113,114,115,116,117,118,125,128,131,],[-32,62,-45,-46,-47,-48,-49,-50,-51,-52,-33,-34,62,62,62,-68,-67,62,62,62,-53,-54,-55,-56,-57,-58,-59,-60,-24,62,-39,62,62,62,62,62,62,-28,62,-40,]),'*':([17,32,33,34,35,36,37,38,39,40,42,43,51,58,60,70,71,77,78,87,89,90,91,92,93,94,95,96,105,109,111,113,114,115,116,117,118,125,128,131,],[-32,64,-45,-46,-47,-48,-49,-50,-51,-52,-33,-34,64,64,64,-68,-67,64,64,64,64,64,-55,-56,64,64,-59,-60,-24,64,-39,64,64,64,64,64,64,-28,64,-40,]),'/':([17,32,33,34,35,36,37,38,39,40,42,43,51,58,60,70,71,77,78,87,89,90,91,92,93,94,95,96,105,109,111,113,114,115,116,117,118,125,128,131,],[-32,65,-45,-46,-47,-48,-49,-50,-51,-52,-33,-34,65,65,65,-68,-67,65,65,65,65,65,-55,-56,65,65,-59,-60,-24,65,-39,65,65,65,65,65,65,-28,65,-40,]),'DOTADD':([17,32,33,34,35,36,37,38,39,40,42,43,51,58,60,70,71,77,78,87,89,90,91,92,93,94,95,96,105,109,111,113,114,115,116,117,118,125,128,131,],[-32,66,-45,-46,-47,-48,-49,-50,-51,-52,-33,-34,66,66,66,-68,-67,66,66,66,66,66,-55,-56,-57,-58,-59,-60,-24,66,-39,66,66,66,66,66,66,-28,66,-40,]),'DOTSUB':([17,32,33,34,35,36,37,38,39,40,42,43,51,58,60,70,71,77,78,87,89,90,91,92,93,94,95,96,105,109,111,113,114,115,116,117,118,125,128,131,],[-32,67,-45,-46,-47,-48,-49,-50,-51,-52,-33,-34,67,67,67,-68,-67,67,67,67,67,67,-55,-56,-57,-58,-59,-60,-24,67,-39,67,67,67,67,67,67,-28,67,-40,]),'DOTMUL':([17,32,33,34,35,36,37,38,39,40,42,43,51,58,60,70,71,77,78,87,89,90,91,92,93,94,95,96,105,109,111,113,114,115,116,117,118,125,128,131,],[-32,68,-45,-46,-47,-48,-49,-50,-51,-52,-33,-34,68,68,68,-68,-67,68,68,68,68,68,68,68,68,68,-59,-60,-24,68,-39,68,68,68,68,68,68,-28,68,-40,]),'DOTDIV':([17,32,33,34,35,36,37,38,39,40,42,43,51,58,60,70,71,77,78,87,89,90,91,92,93,94,95,96,105,109,111,113,114,115,116,117,118,125,128,131,],[-32,69,-45,-46,-47,-48,-49,-50,-51,-52,-33,-34,69,69,69,-68,-67,69,69,69,69,69,69,69,69,69,-59,-60,-24,69,-39,69,69,69,69,69,69,-28,69,-40,]),"'":([17,32,33,34,35,36,37,38,39,40,42,43,51,58,60,70,71,77,78,87,89,90,91,92,93,94,95,96,105,109,111,113,114,115,116,117,118,125,128,131,],[-32,70,-45,-46,-47,-48,-49,-50,-51,-52,-33,-34,70,70,70,-68,70,70,70,70,70,70,70,70,70,70,70,70,-24,70,-39,70,70,70,70,70,70,-28,70,-40,]),',':([17,33,34,35,36,37,38,39,40,42,43,49,50,51,52,70,71,73,74,79,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,111,121,124,125,129,130,131,],[-32,-45,-46,-47,-48,-49,-50,-51,-52,-33,-34,76,-71,-72,-35,-68,-67,106,-27,110,-53,-54,-55,-56,-57,-58,-59,-60,122,-44,-36,-37,-38,-32,-41,-42,-24,-69,-70,-39,-25,-26,-28,-43,110,-40,]),'EQ':([17,33,34,35,36,37,38,39,40,42,43,58,70,71,89,90,91,92,93,94,95,96,105,111,125,131,],[-32,-45,-46,-47,-48,-49,-50,-51,-52,-33,-34,81,-68,-67,-53,-54,-55,-56,-57,-58,-59,-60,-24,-39,-28,-40,]),'NE':([17,33,34,35,36,37,38,39,40,42,43,58,70,71,89,90,91,92,93,94,95,96,105,111,125,131,],[-32,-45,-46,-47,-48,-49,-50,-51,-52,-33,-34,82,-68,-67,-53,-54,-55,-56,-57,-58,-59,-60,-24,-39,-28,-40,]),'LE':([17,33,34,35,36,37,38,39,40,42,43,58,70,71,89,90,91,92,93,94,95,96,105,111,125,131,],[-32,-45,-46,-47,-48,-49,-50,-51,-52,-33,-34,83,-68,-67,-53,-54,-55,-56,-57,-58,-59,-60,-24,-39,-28,-40,]),'GE':([17,33,34,35,36,37,38,39,40,42,43,58,70,71,89,90,91,92,93,94,95,96,105,111,125,131,],[-32,-45,-46,-47,-48,-49,-50,-51,-52,-33,-34,84,-68,-67,-53,-54,-55,-56,-57,-58,-59,-60,-24,-39,-28,-40,]),'LT':([17,33,34,35,36,37,38,39,40,42,43,58,70,71,89,90,91,92,93,94,95,96,105,111,125,131,],[-32,-45,-46,-47,-48,-49,-50,-51,-52,-33,-34,85,-68,-67,-53,-54,-55,-56,-57,-58,-59,-60,-24,-39,-28,-40,]),'GT':([17,33,34,35,36,37,38,39,40,42,43,58,70,71,89,90,91,92,93,94,95,96,105,111,125,131,],[-32,-45,-46,-47,-48,-49,-50,-51,-52,-33,-34,86,-68,-67,-53,-54,-55,-56,-57,-58,-59,-60,-24,-39,-28,-40,]),':':([17,33,34,35,36,37,38,39,40,42,43,70,71,87,89,90,91,92,93,94,95,96,105,111,125,131,],[-32,-45,-46,-47,-48,-49,-50,-51,-52,-33,-34,-68,-67,119,-53,-54,-55,-56,-57,-58,-59,-60,-24,-39,-28,-40,]),')':([17,33,34,35,36,37,38,39,40,42,43,57,61,70,71,89,90,91,92,93,94,95,96,105,107,111,113,114,115,116,117,118,125,131,],[-32,-45,-46,-47,-48,-49,-50,-51,-52,-33,-34,80,88,-68,-67,-53,-54,-55,-56,-57,-58,-59,-60,-24,125,-39,-61,-62,-63,-64,-65,-66,-28,-40,]),'ELSE':([19,20,56,112,120,132,133,],[-5,-6,-7,127,-15,-13,-14,]),']':([42,43,73,74,79,97,98,99,100,101,102,103,104,111,121,124,126,129,130,131,],[-33,-34,105,-27,111,121,-44,-36,-37,-38,-32,-41,-42,-39,-25,-26,131,-43,111,-40,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instructions_opt':([0,],[1,]),'instructions':([0,6,],[2,21,]),'instruction':([0,2,6,21,80,88,127,128,],[3,18,3,18,112,120,132,133,]),'sys_instruction':([0,2,6,21,80,88,127,128,],[4,4,4,4,4,4,4,4,]),'assignment':([0,2,6,21,80,88,127,128,],[5,5,5,5,5,5,5,5,]),'var':([0,2,6,8,11,14,21,22,25,31,41,53,54,59,62,63,64,65,66,67,68,69,72,76,80,81,82,83,84,85,86,88,119,122,127,128,],[9,9,9,23,34,34,9,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,100,34,9,34,34,34,34,34,34,9,34,100,9,9,]),'matrix_element':([0,2,6,11,14,21,22,25,31,41,53,54,59,62,63,64,65,66,67,68,69,72,76,80,81,82,83,84,85,86,88,119,122,127,128,],[15,15,15,39,39,15,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,104,39,15,39,39,39,39,39,39,15,39,104,15,15,]),'vector_element':([0,2,6,11,14,21,22,25,31,41,53,54,59,62,63,64,65,66,67,68,69,72,76,80,81,82,83,84,85,86,88,119,122,127,128,],[16,16,16,40,40,16,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,103,40,16,40,40,40,40,40,40,16,40,103,16,16,]),'assignment_operator':([9,15,16,],[25,53,54,]),'expression':([11,14,22,25,31,41,53,54,59,62,63,64,65,66,67,68,69,76,81,82,83,84,85,86,119,],[32,51,58,60,58,71,77,78,87,89,90,91,92,93,94,95,96,109,113,114,115,116,117,118,128,]),'number':([11,14,22,25,31,41,53,54,59,62,63,64,65,66,67,68,69,72,76,81,82,83,84,85,86,119,122,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,99,33,33,33,33,33,33,33,33,99,]),'matrix':([11,14,22,25,31,41,53,54,59,62,63,64,65,66,67,68,69,76,81,82,83,84,85,86,119,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'matrix_function':([11,14,22,25,31,41,53,54,59,62,63,64,65,66,67,68,69,76,81,82,83,84,85,86,119,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'uminus':([11,14,22,25,31,41,53,54,59,62,63,64,65,66,67,68,69,76,81,82,83,84,85,86,119,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'transposition':([11,14,22,25,31,41,53,54,59,62,63,64,65,66,67,68,69,76,81,82,83,84,85,86,119,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'function_name':([11,14,22,25,31,41,53,54,59,62,63,64,65,66,67,68,69,76,81,82,83,84,85,86,119,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'print_values':([14,],[49,]),'string':([14,76,],[50,108,]),'condition':([22,31,],[57,61,]),'vectors':([44,],[73,]),'vector':([44,106,],[74,124,]),'variables':([72,],[97,]),'variable':([72,122,],[98,129,]),'element':([72,122,],[101,101,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> instructions_opt","S'",1,None,None,None),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt_1','Mparser.py',28),
  ('instructions_opt -> <empty>','instructions_opt',0,'p_instructions_opt_2','Mparser.py',32),
  ('instructions -> instructions instruction','instructions',2,'p_instructions_1','Mparser.py',36),
  ('instructions -> instruction','instructions',1,'p_instructions_2','Mparser.py',40),
  ('instruction -> sys_instruction ;','instruction',2,'p_instruction','Mparser.py',44),
  ('instruction -> assignment ;','instruction',2,'p_instruction','Mparser.py',45),
  ('instruction -> { instructions }','instruction',3,'p_instruction','Mparser.py',46),
  ('sys_instruction -> RETURN expression','sys_instruction',2,'p_sys_instruction_return','Mparser.py',50),
  ('sys_instruction -> BREAK','sys_instruction',1,'p_sys_instruction_break','Mparser.py',54),
  ('sys_instruction -> CONTINUE','sys_instruction',1,'p_sys_instruction_continue','Mparser.py',58),
  ('sys_instruction -> PRINT print_values','sys_instruction',2,'p_sys_instruction_print','Mparser.py',62),
  ('instruction -> IF ( condition ) instruction','instruction',5,'p_instruction_if','Mparser.py',66),
  ('instruction -> IF ( condition ) instruction ELSE instruction','instruction',7,'p_instruction_if_else','Mparser.py',70),
  ('instruction -> FOR var = expression : expression instruction','instruction',7,'p_instruction_for','Mparser.py',74),
  ('instruction -> WHILE ( condition ) instruction','instruction',5,'p_instruction_while','Mparser.py',78),
  ('assignment -> var assignment_operator expression','assignment',3,'p_assignment','Mparser.py',82),
  ('assignment -> matrix_element assignment_operator expression','assignment',3,'p_assignment','Mparser.py',83),
  ('assignment -> vector_element assignment_operator expression','assignment',3,'p_assignment','Mparser.py',84),
  ('assignment_operator -> =','assignment_operator',1,'p_assignment_operator','Mparser.py',88),
  ('assignment_operator -> ADDASSIGN','assignment_operator',1,'p_assignment_operator','Mparser.py',89),
  ('assignment_operator -> SUBASSIGN','assignment_operator',1,'p_assignment_operator','Mparser.py',90),
  ('assignment_operator -> MULASSIGN','assignment_operator',1,'p_assignment_operator','Mparser.py',91),
  ('assignment_operator -> DIVASSIGN','assignment_operator',1,'p_assignment_operator','Mparser.py',92),
  ('matrix -> [ vectors ]','matrix',3,'p_matrix','Mparser.py',96),
  ('vector -> [ variables ]','vector',3,'p_vector','Mparser.py',100),
  ('vectors -> vectors , vector','vectors',3,'p_vectors','Mparser.py',104),
  ('vectors -> vector','vectors',1,'p_vectors','Mparser.py',105),
  ('matrix_function -> function_name ( INTNUM )','matrix_function',4,'p_matrix_function','Mparser.py',109),
  ('function_name -> EYE','function_name',1,'p_function_name','Mparser.py',113),
  ('function_name -> ONES','function_name',1,'p_function_name','Mparser.py',114),
  ('function_name -> ZEROS','function_name',1,'p_function_name','Mparser.py',115),
  ('var -> ID','var',1,'p_var','Mparser.py',119),
  ('number -> INTNUM','number',1,'p_number','Mparser.py',123),
  ('number -> FLOATNUM','number',1,'p_number','Mparser.py',124),
  ('string -> STRING','string',1,'p_string','Mparser.py',128),
  ('variable -> number','variable',1,'p_variable','Mparser.py',132),
  ('variable -> var','variable',1,'p_variable','Mparser.py',133),
  ('variable -> element','variable',1,'p_variable','Mparser.py',134),
  ('vector_element -> ID [ INTNUM ]','vector_element',4,'p_vector_element','Mparser.py',138),
  ('matrix_element -> ID [ INTNUM , INTNUM ]','matrix_element',6,'p_matrix_element','Mparser.py',142),
  ('element -> vector_element','element',1,'p_element','Mparser.py',146),
  ('element -> matrix_element','element',1,'p_element','Mparser.py',147),
  ('variables -> variables , variable','variables',3,'p_variables','Mparser.py',151),
  ('variables -> variable','variables',1,'p_variables','Mparser.py',152),
  ('expression -> number','expression',1,'p_expression','Mparser.py',156),
  ('expression -> var','expression',1,'p_expression','Mparser.py',157),
  ('expression -> matrix','expression',1,'p_expression','Mparser.py',158),
  ('expression -> matrix_function','expression',1,'p_expression','Mparser.py',159),
  ('expression -> uminus','expression',1,'p_expression','Mparser.py',160),
  ('expression -> transposition','expression',1,'p_expression','Mparser.py',161),
  ('expression -> matrix_element','expression',1,'p_expression','Mparser.py',162),
  ('expression -> vector_element','expression',1,'p_expression','Mparser.py',163),
  ('expression -> expression + expression','expression',3,'p_bin_expression','Mparser.py',167),
  ('expression -> expression - expression','expression',3,'p_bin_expression','Mparser.py',168),
  ('expression -> expression * expression','expression',3,'p_bin_expression','Mparser.py',169),
  ('expression -> expression / expression','expression',3,'p_bin_expression','Mparser.py',170),
  ('expression -> expression DOTADD expression','expression',3,'p_bin_expression','Mparser.py',171),
  ('expression -> expression DOTSUB expression','expression',3,'p_bin_expression','Mparser.py',172),
  ('expression -> expression DOTMUL expression','expression',3,'p_bin_expression','Mparser.py',173),
  ('expression -> expression DOTDIV expression','expression',3,'p_bin_expression','Mparser.py',174),
  ('condition -> expression EQ expression','condition',3,'p_condition','Mparser.py',178),
  ('condition -> expression NE expression','condition',3,'p_condition','Mparser.py',179),
  ('condition -> expression LE expression','condition',3,'p_condition','Mparser.py',180),
  ('condition -> expression GE expression','condition',3,'p_condition','Mparser.py',181),
  ('condition -> expression LT expression','condition',3,'p_condition','Mparser.py',182),
  ('condition -> expression GT expression','condition',3,'p_condition','Mparser.py',183),
  ('uminus -> - expression','uminus',2,'p_uminus','Mparser.py',187),
  ("transposition -> expression '",'transposition',2,'p_transposition','Mparser.py',191),
  ('print_values -> print_values , string','print_values',3,'p_print_values','Mparser.py',195),
  ('print_values -> print_values , expression','print_values',3,'p_print_values','Mparser.py',196),
  ('print_values -> string','print_values',1,'p_print_values','Mparser.py',197),
  ('print_values -> expression','print_values',1,'p_print_values','Mparser.py',198),
]
