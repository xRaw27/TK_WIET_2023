
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocIFXnonassocELSErightMULASSIGNDIVASSIGNSUBASSIGNADDASSIGNnonassocLTGTGELEEQNEleft+-leftDOTADDDOTSUBleft*/leftDOTMULDOTDIVrightUMINUSleft\'ADDASSIGN BREAK CONTINUE DIVASSIGN DOTADD DOTDIV DOTMUL DOTSUB ELSE EQ EYE FLOATNUM FOR GE GT ID IF INTNUM LE LT MULASSIGN NE ONES PRINT RETURN STRING SUBASSIGN WHILE ZEROSinstructions_opt : instructions instructions_opt : instructions : instructions instruction instructions : instruction instruction : sys_instruction \';\'\n                   | assignment \';\'\n                   | \'{\' instructions \'}\' instruction : FOR var \'=\' expression \':\' expression instruction instruction : WHILE \'(\' condition \')\' instruction instruction : IF \'(\' condition \')\' instruction %prec IFX instruction : IF \'(\' condition \')\' instruction ELSE instruction condition : expression EQ expression\n                 | expression NE expression\n                 | expression LE expression\n                 | expression GE expression\n                 | expression LT expression\n                 | expression GT expression sys_instruction : BREAK sys_instruction : CONTINUEsys_instruction : RETURN expression sys_instruction : PRINT print_values print_values : print_values \',\' string\n                    | print_values \',\' expression\n                    | string\n                    | expression expression : number\n                  | var\n                  | matrix\n                  | matrix_function\n                  | uminus\n                  | transposition\n                  | matrix_element\n                  | vector_element assignment : var assignment_operator expression\n                  | matrix_element assignment_operator expression\n                  | vector_element assignment_operator expression assignment_operator : \'=\'\n                           | ADDASSIGN\n                           | SUBASSIGN\n                           | MULASSIGN\n                           | DIVASSIGN matrix_function : EYE \'(\' INTNUM \')\'\n                       | ONES \'(\' INTNUM \')\'\n                       | ZEROS \'(\' INTNUM \')\' matrix : \'[\' vectors \']\' vectors : vectors \',\' vector\n               | vector vector : \'[\' variables \']\' variables : variables \',\' variable\n                 | variable variable : number\n                 | var\n                 | element  element : vector_element\n               | matrix_element vector_element : ID "[" INTNUM "]"  matrix_element : ID "[" INTNUM "," INTNUM "]" var : ID number : INTNUM\n              | FLOATNUM string : STRING expression : expression \'+\' expression\n                  | expression \'-\' expression\n                  | expression \'*\' expression\n                  | expression \'/\' expression\n                  | expression DOTADD expression\n                  | expression DOTSUB expression\n                  | expression DOTMUL expression\n                  | expression DOTDIV expression uminus : \'-\' expression %prec UMINUS transposition : expression "\'" '
    
_lr_action_items = {'$end':([0,1,2,3,18,19,20,55,116,123,137,138,],[-2,0,-1,-4,-3,-5,-6,-7,-9,-10,-8,-11,]),'{':([0,2,3,6,17,18,19,20,21,33,34,35,36,37,38,39,40,42,43,55,69,70,82,89,90,91,92,93,94,95,96,97,106,114,116,123,128,129,130,132,133,136,137,138,],[6,6,-4,6,-58,-3,-5,-6,6,-26,-27,-28,-29,-30,-31,-32,-33,-59,-60,-7,-71,-70,6,6,-62,-63,-64,-65,-66,-67,-68,-69,-45,-56,-9,-10,-42,-43,-44,6,6,-57,-8,-11,]),'FOR':([0,2,3,6,17,18,19,20,21,33,34,35,36,37,38,39,40,42,43,55,69,70,82,89,90,91,92,93,94,95,96,97,106,114,116,123,128,129,130,132,133,136,137,138,],[7,7,-4,7,-58,-3,-5,-6,7,-26,-27,-28,-29,-30,-31,-32,-33,-59,-60,-7,-71,-70,7,7,-62,-63,-64,-65,-66,-67,-68,-69,-45,-56,-9,-10,-42,-43,-44,7,7,-57,-8,-11,]),'WHILE':([0,2,3,6,17,18,19,20,21,33,34,35,36,37,38,39,40,42,43,55,69,70,82,89,90,91,92,93,94,95,96,97,106,114,116,123,128,129,130,132,133,136,137,138,],[9,9,-4,9,-58,-3,-5,-6,9,-26,-27,-28,-29,-30,-31,-32,-33,-59,-60,-7,-71,-70,9,9,-62,-63,-64,-65,-66,-67,-68,-69,-45,-56,-9,-10,-42,-43,-44,9,9,-57,-8,-11,]),'IF':([0,2,3,6,17,18,19,20,21,33,34,35,36,37,38,39,40,42,43,55,69,70,82,89,90,91,92,93,94,95,96,97,106,114,116,123,128,129,130,132,133,136,137,138,],[10,10,-4,10,-58,-3,-5,-6,10,-26,-27,-28,-29,-30,-31,-32,-33,-59,-60,-7,-71,-70,10,10,-62,-63,-64,-65,-66,-67,-68,-69,-45,-56,-9,-10,-42,-43,-44,10,10,-57,-8,-11,]),'BREAK':([0,2,3,6,17,18,19,20,21,33,34,35,36,37,38,39,40,42,43,55,69,70,82,89,90,91,92,93,94,95,96,97,106,114,116,123,128,129,130,132,133,136,137,138,],[11,11,-4,11,-58,-3,-5,-6,11,-26,-27,-28,-29,-30,-31,-32,-33,-59,-60,-7,-71,-70,11,11,-62,-63,-64,-65,-66,-67,-68,-69,-45,-56,-9,-10,-42,-43,-44,11,11,-57,-8,-11,]),'CONTINUE':([0,2,3,6,17,18,19,20,21,33,34,35,36,37,38,39,40,42,43,55,69,70,82,89,90,91,92,93,94,95,96,97,106,114,116,123,128,129,130,132,133,136,137,138,],[12,12,-4,12,-58,-3,-5,-6,12,-26,-27,-28,-29,-30,-31,-32,-33,-59,-60,-7,-71,-70,12,12,-62,-63,-64,-65,-66,-67,-68,-69,-45,-56,-9,-10,-42,-43,-44,12,12,-57,-8,-11,]),'RETURN':([0,2,3,6,17,18,19,20,21,33,34,35,36,37,38,39,40,42,43,55,69,70,82,89,90,91,92,93,94,95,96,97,106,114,116,123,128,129,130,132,133,136,137,138,],[13,13,-4,13,-58,-3,-5,-6,13,-26,-27,-28,-29,-30,-31,-32,-33,-59,-60,-7,-71,-70,13,13,-62,-63,-64,-65,-66,-67,-68,-69,-45,-56,-9,-10,-42,-43,-44,13,13,-57,-8,-11,]),'PRINT':([0,2,3,6,17,18,19,20,21,33,34,35,36,37,38,39,40,42,43,55,69,70,82,89,90,91,92,93,94,95,96,97,106,114,116,123,128,129,130,132,133,136,137,138,],[14,14,-4,14,-58,-3,-5,-6,14,-26,-27,-28,-29,-30,-31,-32,-33,-59,-60,-7,-71,-70,14,14,-62,-63,-64,-65,-66,-67,-68,-69,-45,-56,-9,-10,-42,-43,-44,14,14,-57,-8,-11,]),'ID':([0,2,3,6,7,13,14,17,18,19,20,21,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,52,53,55,56,61,62,63,64,65,66,67,68,69,70,71,77,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,106,114,115,116,123,125,128,129,130,132,133,136,137,138,],[17,17,-4,17,23,17,17,-58,-3,-5,-6,17,17,-37,-38,-39,-40,-41,17,17,-26,-27,-28,-29,-30,-31,-32,-33,17,-59,-60,17,17,-7,17,17,17,17,17,17,17,17,17,-71,-70,103,17,17,17,17,17,17,17,17,17,-62,-63,-64,-65,-66,-67,-68,-69,-45,-56,17,-9,-10,103,-42,-43,-44,17,17,-57,-8,-11,]),'}':([3,18,19,20,21,55,116,123,137,138,],[-4,-3,-5,-6,55,-7,-9,-10,-8,-11,]),';':([4,5,11,12,17,32,33,34,35,36,37,38,39,40,42,43,48,49,50,51,57,69,70,78,79,90,91,92,93,94,95,96,97,106,111,112,114,128,129,130,136,],[19,20,-18,-19,-58,-20,-26,-27,-28,-29,-30,-31,-32,-33,-59,-60,-21,-24,-25,-61,-34,-71,-70,-35,-36,-62,-63,-64,-65,-66,-67,-68,-69,-45,-22,-23,-56,-42,-43,-44,-57,]),'=':([8,15,16,17,22,23,114,136,],[25,25,25,-58,56,-58,-56,-57,]),'ADDASSIGN':([8,15,16,17,114,136,],[26,26,26,-58,-56,-57,]),'SUBASSIGN':([8,15,16,17,114,136,],[27,27,27,-58,-56,-57,]),'MULASSIGN':([8,15,16,17,114,136,],[28,28,28,-58,-56,-57,]),'DIVASSIGN':([8,15,16,17,114,136,],[29,29,29,-58,-56,-57,]),'(':([9,10,45,46,47,],[30,31,74,75,76,]),'INTNUM':([13,14,24,25,26,27,28,29,30,31,41,52,53,54,56,61,62,63,64,65,66,67,68,71,74,75,76,77,83,84,85,86,87,88,113,115,125,126,],[42,42,42,-37,-38,-39,-40,-41,42,42,42,42,42,80,42,42,42,42,42,42,42,42,42,42,108,109,110,42,42,42,42,42,42,42,131,42,42,135,]),'FLOATNUM':([13,14,24,25,26,27,28,29,30,31,41,52,53,56,61,62,63,64,65,66,67,68,71,77,83,84,85,86,87,88,115,125,],[43,43,43,-37,-38,-39,-40,-41,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'[':([13,14,17,24,25,26,27,28,29,30,31,41,44,52,53,56,61,62,63,64,65,66,67,68,77,83,84,85,86,87,88,103,107,115,],[44,44,54,44,-37,-38,-39,-40,-41,44,44,44,71,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,126,71,44,]),'EYE':([13,14,24,25,26,27,28,29,30,31,41,52,53,56,61,62,63,64,65,66,67,68,77,83,84,85,86,87,88,115,],[45,45,45,-37,-38,-39,-40,-41,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'ONES':([13,14,24,25,26,27,28,29,30,31,41,52,53,56,61,62,63,64,65,66,67,68,77,83,84,85,86,87,88,115,],[46,46,46,-37,-38,-39,-40,-41,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'ZEROS':([13,14,24,25,26,27,28,29,30,31,41,52,53,56,61,62,63,64,65,66,67,68,77,83,84,85,86,87,88,115,],[47,47,47,-37,-38,-39,-40,-41,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'-':([13,14,17,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,50,52,53,56,57,59,61,62,63,64,65,66,67,68,69,70,77,78,79,81,83,84,85,86,87,88,90,91,92,93,94,95,96,97,106,112,114,115,117,118,119,120,121,122,128,129,130,132,136,],[41,41,-58,41,-37,-38,-39,-40,-41,41,41,62,-26,-27,-28,-29,-30,-31,-32,-33,41,-59,-60,62,41,41,41,62,62,41,41,41,41,41,41,41,41,-71,-70,41,62,62,62,41,41,41,41,41,41,-62,-63,-64,-65,-66,-67,-68,-69,-45,62,-56,41,62,62,62,62,62,62,-42,-43,-44,62,-57,]),'STRING':([14,77,],[51,51,]),'+':([17,32,33,34,35,36,37,38,39,40,42,43,50,57,59,69,70,78,79,81,90,91,92,93,94,95,96,97,106,112,114,117,118,119,120,121,122,128,129,130,132,136,],[-58,61,-26,-27,-28,-29,-30,-31,-32,-33,-59,-60,61,61,61,-71,-70,61,61,61,-62,-63,-64,-65,-66,-67,-68,-69,-45,61,-56,61,61,61,61,61,61,-42,-43,-44,61,-57,]),'*':([17,32,33,34,35,36,37,38,39,40,42,43,50,57,59,69,70,78,79,81,90,91,92,93,94,95,96,97,106,112,114,117,118,119,120,121,122,128,129,130,132,136,],[-58,63,-26,-27,-28,-29,-30,-31,-32,-33,-59,-60,63,63,63,-71,-70,63,63,63,63,63,-64,-65,63,63,-68,-69,-45,63,-56,63,63,63,63,63,63,-42,-43,-44,63,-57,]),'/':([17,32,33,34,35,36,37,38,39,40,42,43,50,57,59,69,70,78,79,81,90,91,92,93,94,95,96,97,106,112,114,117,118,119,120,121,122,128,129,130,132,136,],[-58,64,-26,-27,-28,-29,-30,-31,-32,-33,-59,-60,64,64,64,-71,-70,64,64,64,64,64,-64,-65,64,64,-68,-69,-45,64,-56,64,64,64,64,64,64,-42,-43,-44,64,-57,]),'DOTADD':([17,32,33,34,35,36,37,38,39,40,42,43,50,57,59,69,70,78,79,81,90,91,92,93,94,95,96,97,106,112,114,117,118,119,120,121,122,128,129,130,132,136,],[-58,65,-26,-27,-28,-29,-30,-31,-32,-33,-59,-60,65,65,65,-71,-70,65,65,65,65,65,-64,-65,-66,-67,-68,-69,-45,65,-56,65,65,65,65,65,65,-42,-43,-44,65,-57,]),'DOTSUB':([17,32,33,34,35,36,37,38,39,40,42,43,50,57,59,69,70,78,79,81,90,91,92,93,94,95,96,97,106,112,114,117,118,119,120,121,122,128,129,130,132,136,],[-58,66,-26,-27,-28,-29,-30,-31,-32,-33,-59,-60,66,66,66,-71,-70,66,66,66,66,66,-64,-65,-66,-67,-68,-69,-45,66,-56,66,66,66,66,66,66,-42,-43,-44,66,-57,]),'DOTMUL':([17,32,33,34,35,36,37,38,39,40,42,43,50,57,59,69,70,78,79,81,90,91,92,93,94,95,96,97,106,112,114,117,118,119,120,121,122,128,129,130,132,136,],[-58,67,-26,-27,-28,-29,-30,-31,-32,-33,-59,-60,67,67,67,-71,-70,67,67,67,67,67,67,67,67,67,-68,-69,-45,67,-56,67,67,67,67,67,67,-42,-43,-44,67,-57,]),'DOTDIV':([17,32,33,34,35,36,37,38,39,40,42,43,50,57,59,69,70,78,79,81,90,91,92,93,94,95,96,97,106,112,114,117,118,119,120,121,122,128,129,130,132,136,],[-58,68,-26,-27,-28,-29,-30,-31,-32,-33,-59,-60,68,68,68,-71,-70,68,68,68,68,68,68,68,68,68,-68,-69,-45,68,-56,68,68,68,68,68,68,-42,-43,-44,68,-57,]),"'":([17,32,33,34,35,36,37,38,39,40,42,43,50,57,59,69,70,78,79,81,90,91,92,93,94,95,96,97,106,112,114,117,118,119,120,121,122,128,129,130,132,136,],[-58,69,-26,-27,-28,-29,-30,-31,-32,-33,-59,-60,69,69,69,-71,69,69,69,69,69,69,69,69,69,69,69,69,-45,69,-56,69,69,69,69,69,69,-42,-43,-44,69,-57,]),',':([17,33,34,35,36,37,38,39,40,42,43,48,49,50,51,69,70,72,73,80,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,111,112,114,124,127,128,129,130,134,135,136,],[-58,-26,-27,-28,-29,-30,-31,-32,-33,-59,-60,77,-24,-25,-61,-71,-70,107,-47,113,-62,-63,-64,-65,-66,-67,-68,-69,125,-50,-51,-52,-53,-58,-54,-55,-45,-22,-23,-56,-48,-46,-42,-43,-44,-49,113,-57,]),'EQ':([17,33,34,35,36,37,38,39,40,42,43,59,69,70,90,91,92,93,94,95,96,97,106,114,128,129,130,136,],[-58,-26,-27,-28,-29,-30,-31,-32,-33,-59,-60,83,-71,-70,-62,-63,-64,-65,-66,-67,-68,-69,-45,-56,-42,-43,-44,-57,]),'NE':([17,33,34,35,36,37,38,39,40,42,43,59,69,70,90,91,92,93,94,95,96,97,106,114,128,129,130,136,],[-58,-26,-27,-28,-29,-30,-31,-32,-33,-59,-60,84,-71,-70,-62,-63,-64,-65,-66,-67,-68,-69,-45,-56,-42,-43,-44,-57,]),'LE':([17,33,34,35,36,37,38,39,40,42,43,59,69,70,90,91,92,93,94,95,96,97,106,114,128,129,130,136,],[-58,-26,-27,-28,-29,-30,-31,-32,-33,-59,-60,85,-71,-70,-62,-63,-64,-65,-66,-67,-68,-69,-45,-56,-42,-43,-44,-57,]),'GE':([17,33,34,35,36,37,38,39,40,42,43,59,69,70,90,91,92,93,94,95,96,97,106,114,128,129,130,136,],[-58,-26,-27,-28,-29,-30,-31,-32,-33,-59,-60,86,-71,-70,-62,-63,-64,-65,-66,-67,-68,-69,-45,-56,-42,-43,-44,-57,]),'LT':([17,33,34,35,36,37,38,39,40,42,43,59,69,70,90,91,92,93,94,95,96,97,106,114,128,129,130,136,],[-58,-26,-27,-28,-29,-30,-31,-32,-33,-59,-60,87,-71,-70,-62,-63,-64,-65,-66,-67,-68,-69,-45,-56,-42,-43,-44,-57,]),'GT':([17,33,34,35,36,37,38,39,40,42,43,59,69,70,90,91,92,93,94,95,96,97,106,114,128,129,130,136,],[-58,-26,-27,-28,-29,-30,-31,-32,-33,-59,-60,88,-71,-70,-62,-63,-64,-65,-66,-67,-68,-69,-45,-56,-42,-43,-44,-57,]),':':([17,33,34,35,36,37,38,39,40,42,43,69,70,81,90,91,92,93,94,95,96,97,106,114,128,129,130,136,],[-58,-26,-27,-28,-29,-30,-31,-32,-33,-59,-60,-71,-70,115,-62,-63,-64,-65,-66,-67,-68,-69,-45,-56,-42,-43,-44,-57,]),')':([17,33,34,35,36,37,38,39,40,42,43,58,60,69,70,90,91,92,93,94,95,96,97,106,108,109,110,114,117,118,119,120,121,122,128,129,130,136,],[-58,-26,-27,-28,-29,-30,-31,-32,-33,-59,-60,82,89,-71,-70,-62,-63,-64,-65,-66,-67,-68,-69,-45,128,129,130,-56,-12,-13,-14,-15,-16,-17,-42,-43,-44,-57,]),'ELSE':([19,20,55,116,123,137,138,],[-5,-6,-7,-9,133,-8,-11,]),']':([42,43,72,73,80,98,99,100,101,102,103,104,105,114,124,127,131,134,135,136,],[-59,-60,106,-47,114,124,-50,-51,-52,-53,-58,-54,-55,-56,-48,-46,136,-49,114,-57,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instructions_opt':([0,],[1,]),'instructions':([0,6,],[2,21,]),'instruction':([0,2,6,21,82,89,132,133,],[3,18,3,18,116,123,137,138,]),'sys_instruction':([0,2,6,21,82,89,132,133,],[4,4,4,4,4,4,4,4,]),'assignment':([0,2,6,21,82,89,132,133,],[5,5,5,5,5,5,5,5,]),'var':([0,2,6,7,13,14,21,24,30,31,41,52,53,56,61,62,63,64,65,66,67,68,71,77,82,83,84,85,86,87,88,89,115,125,132,133,],[8,8,8,22,34,34,8,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,101,34,8,34,34,34,34,34,34,8,34,101,8,8,]),'matrix_element':([0,2,6,13,14,21,24,30,31,41,52,53,56,61,62,63,64,65,66,67,68,71,77,82,83,84,85,86,87,88,89,115,125,132,133,],[15,15,15,39,39,15,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,105,39,15,39,39,39,39,39,39,15,39,105,15,15,]),'vector_element':([0,2,6,13,14,21,24,30,31,41,52,53,56,61,62,63,64,65,66,67,68,71,77,82,83,84,85,86,87,88,89,115,125,132,133,],[16,16,16,40,40,16,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,104,40,16,40,40,40,40,40,40,16,40,104,16,16,]),'assignment_operator':([8,15,16,],[24,52,53,]),'expression':([13,14,24,30,31,41,52,53,56,61,62,63,64,65,66,67,68,77,83,84,85,86,87,88,115,],[32,50,57,59,59,70,78,79,81,90,91,92,93,94,95,96,97,112,117,118,119,120,121,122,132,]),'number':([13,14,24,30,31,41,52,53,56,61,62,63,64,65,66,67,68,71,77,83,84,85,86,87,88,115,125,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,100,33,33,33,33,33,33,33,33,100,]),'matrix':([13,14,24,30,31,41,52,53,56,61,62,63,64,65,66,67,68,77,83,84,85,86,87,88,115,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'matrix_function':([13,14,24,30,31,41,52,53,56,61,62,63,64,65,66,67,68,77,83,84,85,86,87,88,115,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'uminus':([13,14,24,30,31,41,52,53,56,61,62,63,64,65,66,67,68,77,83,84,85,86,87,88,115,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'transposition':([13,14,24,30,31,41,52,53,56,61,62,63,64,65,66,67,68,77,83,84,85,86,87,88,115,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'print_values':([14,],[48,]),'string':([14,77,],[49,111,]),'condition':([30,31,],[58,60,]),'vectors':([44,],[72,]),'vector':([44,107,],[73,127,]),'variables':([71,],[98,]),'variable':([71,125,],[99,134,]),'element':([71,125,],[102,102,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> instructions_opt","S'",1,None,None,None),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt_1','Mparser.py',28),
  ('instructions_opt -> <empty>','instructions_opt',0,'p_instructions_opt_2','Mparser.py',32),
  ('instructions -> instructions instruction','instructions',2,'p_instructions_1','Mparser.py',36),
  ('instructions -> instruction','instructions',1,'p_instructions_2','Mparser.py',40),
  ('instruction -> sys_instruction ;','instruction',2,'p_instruction','Mparser.py',44),
  ('instruction -> assignment ;','instruction',2,'p_instruction','Mparser.py',45),
  ('instruction -> { instructions }','instruction',3,'p_instruction','Mparser.py',46),
  ('instruction -> FOR var = expression : expression instruction','instruction',7,'p_instruction_for','Mparser.py',50),
  ('instruction -> WHILE ( condition ) instruction','instruction',5,'p_instruction_while','Mparser.py',54),
  ('instruction -> IF ( condition ) instruction','instruction',5,'p_instruction_if','Mparser.py',58),
  ('instruction -> IF ( condition ) instruction ELSE instruction','instruction',7,'p_instruction_if_else','Mparser.py',62),
  ('condition -> expression EQ expression','condition',3,'p_condition','Mparser.py',66),
  ('condition -> expression NE expression','condition',3,'p_condition','Mparser.py',67),
  ('condition -> expression LE expression','condition',3,'p_condition','Mparser.py',68),
  ('condition -> expression GE expression','condition',3,'p_condition','Mparser.py',69),
  ('condition -> expression LT expression','condition',3,'p_condition','Mparser.py',70),
  ('condition -> expression GT expression','condition',3,'p_condition','Mparser.py',71),
  ('sys_instruction -> BREAK','sys_instruction',1,'p_sys_instruction_break','Mparser.py',75),
  ('sys_instruction -> CONTINUE','sys_instruction',1,'p_sys_instruction_continue','Mparser.py',79),
  ('sys_instruction -> RETURN expression','sys_instruction',2,'p_sys_instruction_return','Mparser.py',83),
  ('sys_instruction -> PRINT print_values','sys_instruction',2,'p_sys_instruction_print','Mparser.py',87),
  ('print_values -> print_values , string','print_values',3,'p_print_values','Mparser.py',91),
  ('print_values -> print_values , expression','print_values',3,'p_print_values','Mparser.py',92),
  ('print_values -> string','print_values',1,'p_print_values','Mparser.py',93),
  ('print_values -> expression','print_values',1,'p_print_values','Mparser.py',94),
  ('expression -> number','expression',1,'p_expression','Mparser.py',98),
  ('expression -> var','expression',1,'p_expression','Mparser.py',99),
  ('expression -> matrix','expression',1,'p_expression','Mparser.py',100),
  ('expression -> matrix_function','expression',1,'p_expression','Mparser.py',101),
  ('expression -> uminus','expression',1,'p_expression','Mparser.py',102),
  ('expression -> transposition','expression',1,'p_expression','Mparser.py',103),
  ('expression -> matrix_element','expression',1,'p_expression','Mparser.py',104),
  ('expression -> vector_element','expression',1,'p_expression','Mparser.py',105),
  ('assignment -> var assignment_operator expression','assignment',3,'p_assignment','Mparser.py',109),
  ('assignment -> matrix_element assignment_operator expression','assignment',3,'p_assignment','Mparser.py',110),
  ('assignment -> vector_element assignment_operator expression','assignment',3,'p_assignment','Mparser.py',111),
  ('assignment_operator -> =','assignment_operator',1,'p_assignment_operator','Mparser.py',115),
  ('assignment_operator -> ADDASSIGN','assignment_operator',1,'p_assignment_operator','Mparser.py',116),
  ('assignment_operator -> SUBASSIGN','assignment_operator',1,'p_assignment_operator','Mparser.py',117),
  ('assignment_operator -> MULASSIGN','assignment_operator',1,'p_assignment_operator','Mparser.py',118),
  ('assignment_operator -> DIVASSIGN','assignment_operator',1,'p_assignment_operator','Mparser.py',119),
  ('matrix_function -> EYE ( INTNUM )','matrix_function',4,'p_matrix_function','Mparser.py',123),
  ('matrix_function -> ONES ( INTNUM )','matrix_function',4,'p_matrix_function','Mparser.py',124),
  ('matrix_function -> ZEROS ( INTNUM )','matrix_function',4,'p_matrix_function','Mparser.py',125),
  ('matrix -> [ vectors ]','matrix',3,'p_matrix','Mparser.py',128),
  ('vectors -> vectors , vector','vectors',3,'p_vectors','Mparser.py',132),
  ('vectors -> vector','vectors',1,'p_vectors','Mparser.py',133),
  ('vector -> [ variables ]','vector',3,'p_vector','Mparser.py',137),
  ('variables -> variables , variable','variables',3,'p_variables','Mparser.py',141),
  ('variables -> variable','variables',1,'p_variables','Mparser.py',142),
  ('variable -> number','variable',1,'p_variable','Mparser.py',146),
  ('variable -> var','variable',1,'p_variable','Mparser.py',147),
  ('variable -> element','variable',1,'p_variable','Mparser.py',148),
  ('element -> vector_element','element',1,'p_element','Mparser.py',152),
  ('element -> matrix_element','element',1,'p_element','Mparser.py',153),
  ('vector_element -> ID [ INTNUM ]','vector_element',4,'p_vector_element','Mparser.py',157),
  ('matrix_element -> ID [ INTNUM , INTNUM ]','matrix_element',6,'p_matrix_element','Mparser.py',161),
  ('var -> ID','var',1,'p_var','Mparser.py',165),
  ('number -> INTNUM','number',1,'p_number','Mparser.py',169),
  ('number -> FLOATNUM','number',1,'p_number','Mparser.py',170),
  ('string -> STRING','string',1,'p_string','Mparser.py',174),
  ('expression -> expression + expression','expression',3,'p_bin_expression','Mparser.py',178),
  ('expression -> expression - expression','expression',3,'p_bin_expression','Mparser.py',179),
  ('expression -> expression * expression','expression',3,'p_bin_expression','Mparser.py',180),
  ('expression -> expression / expression','expression',3,'p_bin_expression','Mparser.py',181),
  ('expression -> expression DOTADD expression','expression',3,'p_bin_expression','Mparser.py',182),
  ('expression -> expression DOTSUB expression','expression',3,'p_bin_expression','Mparser.py',183),
  ('expression -> expression DOTMUL expression','expression',3,'p_bin_expression','Mparser.py',184),
  ('expression -> expression DOTDIV expression','expression',3,'p_bin_expression','Mparser.py',185),
  ('uminus -> - expression','uminus',2,'p_uminus','Mparser.py',189),
  ("transposition -> expression '",'transposition',2,'p_transposition','Mparser.py',193),
]
